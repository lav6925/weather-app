syntax = "proto3";

package rpc.proto;

option go_package = "rpc/proto";

// The WeatherService exposes gRPC methods
service WeatherService {
    rpc GetWeather (GetWeatherRequest) returns (GetWeatherResponse);
    rpc CreateWeather (CreateWeatherRequest) returns (CreateWeatherResponse);
    rpc UpdateWeather (UpdateWeatherRequest) returns (UpdateWeatherResponse);
    rpc DeleteWeather (DeleteWeatherRequest) returns (DeleteWeatherResponse);
}

// Messages for GetWeather
message GetWeatherRequest {
    string city = 1; // Weather entry ID
}

message GetWeatherResponse {
    string city = 1;
    string description = 2;
    string timestamp = 3;
    float temperature = 4;
}

// Messages for CreateWeather
message CreateWeatherRequest {
    string city = 1;
    string description = 2;
    float temperature = 3;
}

message CreateWeatherResponse {
    string message = 1;
}

// Messages for UpdateWeather
message UpdateWeatherRequest {
    int32 id = 1;
    string city = 2;
    string description = 3;
    float temperature = 4;
}

message UpdateWeatherResponse {
    string message = 1;
}

// Messages for DeleteWeather
message DeleteWeatherRequest {
    int32 id = 1;
}

message DeleteWeatherResponse {
    string message = 1;
}
